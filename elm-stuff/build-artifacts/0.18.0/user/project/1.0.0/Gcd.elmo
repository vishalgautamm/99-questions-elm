var _user$project$Gcd_ops = _user$project$Gcd_ops || {};
_user$project$Gcd_ops['..'] = F2(
	function (start, end) {
		return A2(_elm_lang$core$List$range, start, end);
	});
var _user$project$Gcd$gcd = F2(
	function (a, b) {
		gcd:
		while (true) {
			if (_elm_lang$core$Native_Utils.eq(b, 0)) {
				return a;
			} else {
				var _v0 = _elm_lang$core$Basics$abs(b),
					_v1 = A2(_elm_lang$core$Basics_ops['%'], a, b);
				a = _v0;
				b = _v1;
				continue gcd;
			}
		}
	});
var _user$project$Gcd$test = A2(
	_elm_lang$core$List$all,
	function (_p0) {
		var _p1 = _p0;
		return _elm_lang$core$Native_Utils.eq(_p1._0, _p1._1);
	},
	{
		ctor: '::',
		_0: {
			ctor: '_Tuple2',
			_0: A2(_user$project$Gcd$gcd, 36, 63),
			_1: 9
		},
		_1: {
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: A2(_user$project$Gcd$gcd, 10, 25),
				_1: 5
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: A2(_user$project$Gcd$gcd, 120, 120),
					_1: 120
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: A2(_user$project$Gcd$gcd, 2, 12),
						_1: 2
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: A2(_user$project$Gcd$gcd, 23, 37),
							_1: 1
						},
						_1: {
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: A2(_user$project$Gcd$gcd, 45, 330),
								_1: 15
							},
							_1: {
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: A2(_user$project$Gcd$gcd, 24528, 65934),
									_1: 6
								},
								_1: {
									ctor: '::',
									_0: {
										ctor: '_Tuple2',
										_0: A2(_user$project$Gcd$gcd, 120, -120),
										_1: 120
									},
									_1: {
										ctor: '::',
										_0: {
											ctor: '_Tuple2',
											_0: A2(_user$project$Gcd$gcd, -2, 12),
											_1: 2
										},
										_1: {
											ctor: '::',
											_0: {
												ctor: '_Tuple2',
												_0: A2(_user$project$Gcd$gcd, 37, 23),
												_1: 1
											},
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	});
var _user$project$Gcd$main = _elm_lang$virtual_dom$Native_VirtualDom.staticProgram(
	_elm_lang$html$Html$text(
		_user$project$Gcd$test ? 'Your implementation passed all tests.' : 'Your implementation failed at least one test.'));
